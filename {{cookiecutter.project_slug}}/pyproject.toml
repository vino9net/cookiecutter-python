[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "0.1.0"
description = "Cookiecutter template for generic Python 3 project with tooling configuration for testing, linting and IDE support"
authors = ["Li Lin <guru.lin@gmail.com>"]
license = "MIT"

# this section contains all dependencies required to run unit and integration tests
# not just dependencies requied for lambda runtime
[tool.poetry.dependencies]
python = ">=3.11,<3.12"
python-dotenv = "^1.0.0"
loguru = "^0.7.2"
{% if "sqlalchemy" in cookiecutter.extra_packages %}
sqlalchemy = {extras = ["mypy"], version = "^2.0.23"}
sqlalchemy-utils = "^0.41.1"
alembic = "^1.13.0"
psycopg = {extras = ["binary", "pool"], version = "^3.1.14"}
{% endif %}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-dotenv = "^0.5.2"
pytest-mock = "^3.14"
pytest-cov = "^4.1"
pre-commit = "3.7.1"
ruff = "^0.4.6"
mypy = "^1.10.0"


[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["."]
omit = ["tests/*"]

# see ruff configuration options at
# https://docs.astral.sh/ruff/configuration/

[tool.ruff]
line-length = 120
indent-width = 4
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "devbox.lock",
    "*{cookiecutter.project_slug}*",
]

[tool.ruff.lint]
select = ["E", "F", "W", "C", "I", "A"]  # Enable checks for PEP8, imports, and other standard rules
ignore = ["E203", "E266"]

[tool.mypy]
warn_return_any = false
warn_unused_configs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
mypy_path = "."

[[tool.mypy.overrides]]
module = [
    "dataclasses",
{% if "sqlalchemy" in cookiecutter.extra_packages %}
    "sqlalchemy_utils",
{% endif %}
]
ignore_missing_imports = true
